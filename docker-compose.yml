version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: tg_app_php
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - tg_app_network
    depends_on:
      - db
      - redis

  webserver:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: tg_app_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./frontend/dist:/var/www/public/frontend
    networks:
      - tg_app_network
    depends_on:
      - app
      - frontend

  frontend:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    container_name: tg_app_frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - tg_app_network
    command: npm run build

  db:
    image: postgres:15-alpine
    container_name: tg_app_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: tg_miniapp
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: laravel_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tg_app_network

  redis:
    image: redis:7-alpine
    container_name: tg_app_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - tg_app_network

networks:
  tg_app_network:
    driver: bridge

volumes:
  postgres_data: